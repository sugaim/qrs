name: Rust

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2

    - run: cargo check --all --all-features
    - run: cargo fmt --all --check --verbose
    - run: cargo clippy --all-features -- -D warnings
        
  test:
    needs: check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2

    - run: cargo test --release --all-features

  post:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT }}
    - run: |
        git fetch
        git checkout ci_passed
        git merge develop
    - run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"

    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - uses: taiki-e/install-action@cargo-llvm-cov

    - run: mkdir -p .measurements

    - run: |
        cargo llvm-cov--all-features --workspace 
        --codecov --output-path target/codecov.dat 
        --ignore-filename-regex sandbox
    - run: cargo llvm-cov report --lcov --output-path .measurements/coverage.info
    - uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: target/codecov.dat
        name: codecov-coverage
        fail_ci_if_error: true

    - run: sudo apt install cloc
    - run: cloc --exclude-list-file=.gitignore . > .measurements/cloc.txt
    - run: cat .measurements/cloc.txt

    - run: git add .
    - run: git commit -m "ci passed"
    - run: git push origin HEAD
