name: Rust

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/workflows/rust-setup
    
    - run: cargo fmt --all --check --verbose
    - run: cargo test --release --workspace --all-features
    - run: cargo clippy --release --all-features -- -D warnings
    
  post-process:
    needs: check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT }}
        fetch-depth: 0
    - run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git checkout ci_passed
        git merge develop
    
    - run: sudo apt-get update && sudo apt-get install -y cloc
    - uses: ./.github/workflows/rust-setup    
    - run: cargo install cargo-llvm-cov

    - run: rm -rf .measurements
    - run: mkdir -p .measurements

    - run: >
        cargo llvm-cov --no-cfg-coverage --all-features --workspace 
        --codecov --output-path target/codecov.dat 
        --ignore-filename-regex "(sandbox/*|scriptsqrscript/src/*)"
    - run: cargo llvm-cov report --lcov --output-path .measurements/coverage.info
    - uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: target/codecov.dat
        name: codecov-coverage
        fail_ci_if_error: true

    - run: cloc --exclude-list-file=.gitignore . --yaml --out=.measurements/cloc.yaml

    - run: git add .
    - run: git commit -m "ci passed"
    - run: git push origin HEAD
