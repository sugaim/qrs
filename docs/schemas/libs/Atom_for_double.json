{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Atom_for_double",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "rate",
        "type"
      ],
      "properties": {
        "rate": {
          "description": "Flat yield(value, not a percent nor a bps) in Act/365F.",
          "type": "number",
          "format": "double"
        },
        "type": {
          "type": "string",
          "const": "flat"
        }
      }
    },
    {
      "type": "object",
      "required": [
        "inst_fwd",
        "type"
      ],
      "properties": {
        "inst_fwd": {
          "$ref": "#/definitions/Pwconst1d_for_DateTime_and_Yield_for_Act365f_and_double"
        },
        "type": {
          "type": "string",
          "const": "instfwd_pwconst"
        }
      }
    }
  ],
  "definitions": {
    "Act365f": {
      "type": "string",
      "format": "act365f"
    },
    "DateTime": {
      "description": "DateTime with timezone. RFC3339 string or naive datetime with IANA(e.g. '2024-06-01T12:34:56[Asia/Tokyo]') are supported",
      "type": "string",
      "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|(\\+|-)\\d{2}:\\d{2}|\\[.+\\])$"
    },
    "Pwconst1d_for_DateTime_and_Yield_for_Act365f_and_double": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/SizeEnsured2_for_FlatMap_for_DateTime_and_Yield_for_Act365f_and_double"
        }
      }
    },
    "SizeEnsured2_for_FlatMap_for_DateTime_and_Yield_for_Act365f_and_double": {
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "$ref": "#/definitions/DateTime"
          },
          "value": {
            "$ref": "#/definitions/Yield_for_Act365f_and_double"
          }
        }
      },
      "minItems": 2
    },
    "Yield_for_Act365f_and_double": {
      "description": "A change ratio of a value over a year.\n\nThe dimension of this struct is 1/T, where T is a time unit. Concrete unit of T is determined by the day count fraction and we can recover the change ratio (not a percent nor a bps) between two dates by multiplying the year fraction calculated with the given day count fraction.\n\n# Example ``` use qchrono::timepoint::Date; use qfincore::{daycount::{YearFrac, Act360}, Yield};\n\nlet y = Yield { day_count: Act360, value: 0.02, };\n\nlet stt: Date = \"2021-01-01\".parse().unwrap(); let end: Date = \"2021-01-31\".parse().unwrap();\n\nlet ratio = y.to_ratio(&stt, &end).unwrap(); assert_eq!(ratio, 0.02 * 30. / 360.); ```\n\n# Panics\n\nAlghough this struct allows arithmetic operations, we need to check that two [Yield] instances have the same day count fraction to make the calculation consistent. If this is not satisfied, the calculation will panic.\n\n```should_panic use qfincore::{daycount::{Act360, Act365f, DayCount}, Yield};\n\nlet y1 = Yield { day_count: DayCount::Act360, value: 0.01, }; let y2 = Yield { day_count: DayCount::Act365f, value: 0.02, };\n\nlet _ = y1 + y2; // panics ```",
      "type": "object",
      "required": [
        "day_count",
        "value"
      ],
      "properties": {
        "day_count": {
          "$ref": "#/definitions/Act365f"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      }
    }
  }
}